[gd_scene load_steps=7 format=2]

[sub_resource type="PlaneMesh" id=1]
size = Vector2( 100, 140 )

[sub_resource type="Skin" id=4]

[sub_resource type="VisualShaderNodeColorConstant" id=5]
output_port_for_preview = 1
constant = Color( 0.929412, 0.905882, 0.905882, 1 )

[sub_resource type="VisualShader" id=6]
code = "shader_type spatial;



void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(0.929412, 0.905882, 0.905882);
	float n_out2p1 = 1.000000;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 0, 75 )
nodes/fragment/0/position = Vector2( 980, 140 )
nodes/fragment/2/node = SubResource( 5 )
nodes/fragment/2/position = Vector2( 640, 140 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 2, 1, 0, 1 )

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )

[sub_resource type="ConcavePolygonShape" id=3]
data = PoolVector3Array( -50, 0, 70, 50, 0, 70, 50, 0, -70, -50, 0, -70, -50, 0, 70, 50, 0, -70 )

[node name="First scene" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
mesh = SubResource( 1 )
skin = SubResource( 4 )
material/0 = SubResource( 7 )

[node name="StaticBody" type="StaticBody" parent="MeshInstance"]

[node name="CollisionShape" type="CollisionShape" parent="MeshInstance/StaticBody"]
shape = SubResource( 3 )
